[{"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\index.js":"1","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\reportWebVitals.js":"2","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\App.js":"3","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Home\\Home.js":"4","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\upload\\Uploadh.js":"5","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Landing\\Postlist.js":"6","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\upload\\Upload.js":"7","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Landing\\Postlistpage.js":"8","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\head\\Header.js":"9","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Post\\Post.js":"10","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Post\\Postimage.js":"11","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Post\\Postdetails.js":"12"},{"size":511,"mtime":1613670465465,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1611902592746,"results":"15","hashOfConfig":"14"},{"size":591,"mtime":1613793041509,"results":"16","hashOfConfig":"14"},{"size":789,"mtime":1613050825933,"results":"17","hashOfConfig":"14"},{"size":242,"mtime":1613791336461,"results":"18","hashOfConfig":"14"},{"size":260,"mtime":1613791336427,"results":"19","hashOfConfig":"14"},{"size":2577,"mtime":1614059921690,"results":"20","hashOfConfig":"14"},{"size":2177,"mtime":1614059921554,"results":"21","hashOfConfig":"14"},{"size":580,"mtime":1613670465434,"results":"22","hashOfConfig":"14"},{"size":908,"mtime":1614062908553,"results":"23","hashOfConfig":"14"},{"size":265,"mtime":1613793041519,"results":"24","hashOfConfig":"14"},{"size":1398,"mtime":1614059921594,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"flgao1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\index.js",[],["54","55"],"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\reportWebVitals.js",[],"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\App.js",["56"],"import React from 'react'\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tSwitch\r\n} from \"react-router-dom\";\r\nimport Home from './Components/Home/Home'\r\nimport UploadHeader from './Components/upload/Uploadh'\r\nimport Postlist from './Components/Landing/Postlist'\r\nfunction App(){\r\n    return(\r\n        <Router>\r\n        <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n            <Route exact path =\"/posts/create\" component = {UploadHeader}/>\r\n            <Route exact path=\"/posts\" exact component={Postlist} />\r\n        </Switch>\r\n    </Router>\r\n    );\r\n}\r\nexport default App;","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Home\\Home.js",[],"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\upload\\Uploadh.js",[],"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Landing\\Postlist.js",[],"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\upload\\Upload.js",[],"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Landing\\Postlistpage.js",[],"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\head\\Header.js",[],"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Post\\Post.js",["57"],"C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Post\\Postimage.js",["58"],"import React from 'react';\r\nimport './postpage.css';\r\n\r\nfunction Postimage(props){\r\n    return (\r\n        <div className='postpage_bikediv'><img className='post_image'  src = {\"http://localhost:9000/\" + props.imagepath} /></div>\r\n    )\r\n}\r\nexport default Postimage;","C:\\Users\\leene\\Documents\\GitHub\\apprenticeship-team-b\\client\\src\\Components\\Post\\Postdetails.js",["59"],"import './postpage.css';\r\nimport heart from './heart.png'\r\nimport share from './share.png'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nfunction Postdetails(props){\r\n    const [likes,setLike]=useState(props.likes);\r\n    const history = useHistory();\r\n    const likesbutton= async (e)=>{\r\n        const data = new FormData();\r\n        \r\n        data.append(\"id\",props.id)\r\n        console.log('like',props.id)\r\n        fetch('http://localhost:9000/post/' + props.id, {\r\n            method: 'PUT',\r\n            body: data,\r\n            \r\n        }).then(res => res.json())\r\n        .then((data)=>console.log(data));\r\n        history.push(\"/posts\");\r\n        setLike(likes+1)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='postpage_heartshare'>\r\n                <button className='heartbutton'><img className='postpage_heart' src={heart} alt=\"my image\" onClick={likesbutton}/></button>\r\n            \r\n            <input type='image' src={share} alt=' ' className='postpage_share'/>\r\n            <h1 className='postpage_date'>{props.date}</h1>\r\n            </div>\r\n\r\n            \r\n            <div className='postpage_messagelikes'>\r\n            <h1 className='postpage_likes' >{likes} likes</h1>\r\n            <h1 className='postpage_message'>{props.message}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Postdetails;",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":16,"column":40,"nodeType":"66","endLine":16,"endColumn":45},{"ruleId":"67","severity":1,"message":"68","line":22,"column":7,"nodeType":"69","endLine":22,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":6,"column":43,"nodeType":"69","endLine":6,"endColumn":125},{"ruleId":"70","severity":1,"message":"71","line":26,"column":49,"nodeType":"69","endLine":26,"endColumn":131},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]